server:
  port: 8088 #服务端口
spring:
  application:
    name: app-zuul-gateway #指定服务名
#配置服务器 读取仓库中的service-zuul-dev文件；
  cloud:
    config:
      name: service-zuul #对应配置中心的应用名称，默认是本应用名，即spring.application.name,该名称要和git中的配置一致
      #uri: http://127.0.0.1:7788/
      profile: dev #对应配置服务中的{profile}
      label: master #对应的分支
      discovery:
        enabled: true #启用发现服务功能
        service-id: microservice-config-server #指定配置中心工程的名称
###服务注册到eureka注册中心的地址
eureka:
  client:
    service-url:
           defaultZone: http://emrys:123456@127.0.0.1:8181/eureka/
###因为该应用为服务提供者，是eureka的一个客户端，需要注册到注册中心
    register-with-eureka: true
###是否需要从eureka上检索服务
    fetch-registry: true
  instance:
      prefer-ip-address: true #将自己的ip地址注册到Eureka服务中
      ip-address: 127.0.0.1
      instance-id: ${spring.application.name}###${server.port} #指定实例id
 #统一配置管理zuul         
#zuul:
#  #ignored-services: '*' #忽略服务
#  routes: #定义服务转发规则#    item-service: #item-service这个名字是任意写的
#      path: /item-service/** #匹配item-service的请求app-item服务
#      #url: http://127.0.0.1:8081 #真正的微服务地址
#      service-id: app-item
#ribbon:
#  eureka:
#    enabled: true #false  禁止Ribbon使用Eureka 
#上面或者下面配置
#zuul:
#  ignored-services: app-item #忽略服务
#  ignored-services: '*' #忽略所有服务，只能用代理的的服务
#  routes: #定义服务转发规则
#    app-order: /app-order/**
#    app-item: /app-item/**


 
# 配置服务器修改了配置文件，需要这样执行，可不用重启服务器；post方式请求http://localhost:8080/actuator/refresh    
#开启所有端点
management:
  endpoints:
    web:
     exposure:
       include: "*"
       